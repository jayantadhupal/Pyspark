from pyspark.sql.types import StructType, StringType, IntegerType, DoubleType, LongType
from pyspark.sql import SparkSession

spark = SparkSession.builder.appName('myAppName').getOrCreate()



schema_nyse = StructType().add("exchange_name",StringType(),True).add("stock_id",StringType(),True).add("stock_dt",StringType(),True).add("open",DoubleType(),True).add("high",DoubleType(),True).add("low",DoubleType(),True).add("close",DoubleType(),True).add("volume",LongType(),True).add("adj_close",DoubleType(),True)      

df_with_schema = spark.read.format("csv").option("header","False").schema(schema_nyse).load("/content/sample_data/NYSE.csv")

df_with_schema.printSchema()

df_with_schema.show()

df_with_schema.registerTempTable("nyse")

df_StockVol = spark.sql("select stock_id, sum(volume) from nyse group by stock_id")

df_StockVol.rdd.getNumPartitions()

df_new = df_StockVol.repartition(1)

df_new.write.csv("/content/sample_data/pyspark7")

----------------------------------------------------------------------

After changing the default settings to 100

sqlContext = SQLContext(sc)

sqlContext.setConf("spark.sql.shuffle.partitions", "100")

df_StockVol = spark.sql("select stock_id, sum(volume) from nyse group by stock_id")
df_StockVol.rdd.getNumPartitions()                                                                                                                                  
100


------------------------------------------------------------------------------
schema_airlines = StructType().add("Year",StringType(),True).add("Quarter",StringType(),True).add("ARPS",DoubleType(),True).add("Booked_seats",IntegerType(),True) 


df_with_schema2 = spark.read.format("csv").option("header", "True").schema(schema_airlines).load("/content/sample_data/airlines.csv")

df_with_schema2.registerTempTable("airlines")

YrWiseRev = spark.sql("select year, round(sum(arps*booked_seats)/1000000,2) as total_in_mill from airlines group by year order by total_in_mill desc")

YrWisePsx = spark.sql("select year, sum(booked_seats) as total_psx from airlines group by year order by total_psx desc")
